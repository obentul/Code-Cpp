#1 ==================================================================================

% 取余要求两侧数据都是整形，这也是唯一一个对云算数有要求的运算符

++ -- 优先级高于 *

#2 ==================================================================================

sizeof

对引用做sizeof，返回引用宿主占用的内存大小
对解引用做sizeof，返回指针指向对象占用的内存大小
对数组做sizeof，返回数组所有元素占用内存大小
 
 
#3 ==================================================================================

可以转换指针，普通类型，类
static_cast 	:		除了不能转换底层const ，其他都行。一般情况下的强制类型转化都用这个。
						
只能转换指针类型/引用类型
const_cast		:		只能改变底层const，通过这个函数，可以解除只读对象的只读特性。从而可以写只读对象
（！）通过这个函数，能达到写const变量的目的。
官方说明：在包含 const_cast 的行中，this 指针的数据类型为 const CCTest *。 const_cast 运算符会将 this 
		  指针的数据类型更改为 CCTest *，以允许修改成员 number。 强制转换仅对其所在的语句中的其余部分持续。
（！）PS：const_cast不能修改常量，比如我先定义一个常量字符串，然后用指针指过去，再通过const_cast来创建
		  一个非const指针，这时候这个指针无法修改常量字符串。
	
	
1、static_cast，支持子类指针到父类指针的转换，并根据实际情况调整指针的值，反过来也支持，但会给出编译警告，它作用最类似C风格的“强制转换”，一般来说可认为它是安全的；

2、dynamic_cast，支持子类指针到父类指针的转换，并根据实际情况调整指针的值，和static_cast不同，反过来它就不支持了，会导致编译错误，这种转换是最安全的转换；

3、reinterpret_cast，支持任何转换，但仅仅是如它的名字所描述的那样“重解释”而已，不会对指针的值进行任何调整，用它完全可以做到“指鹿为马”，但很明显，它是最不安全的转换，
使用它的时候，你得头脑清醒，知道自己在干什么；

4、const_cast，这个转换能剥离一个对象的const属性，也就是说允许你对常量进行修改。