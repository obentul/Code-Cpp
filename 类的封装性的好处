封装性主要还是为了 模块化编程 服务。

上层调用者值需要面向接口编程，所以类的编写者只要保证接口不变，类的内部实现随意变动。
如果上层调用者直接访问类的所有内部实现，那么只要类发生改变，则调用者的业务逻辑也可能跟着变动。

所以所谓的封装 说到底 还是为了 “面向接口编程” 服务。

不是说一定要求所有成员变量都是private，如果某些成员变量的使用特别简单，比如就是计数，设置标志位等等，
完全也可以设置为public，前提是在单线程模式下，因为多线程的话就要考虑对变量加减锁，此时为了面向接口编程，
对变量的访问应当用函数包起来，以确保调用者面向接口编程。
