当使用delete操作指向指向某个对象的“指针”时，对应对象的析构函数将被被调用。


这里就涉及到一个问题：如果指针是父类指针，但是指向的实例是子类实例，那么按照业务上来看，我们是想
析构子类实例，此时虚析构函数就很重要了。


因此，只要是父类，那么就务必定义一个虚析构函数。如果父类有徐析构函数，那么子类就不再需要自己定义
虚析构函数(也可以自己定义)，编译器会在后面的继承体系中自动为孙类和孙孙类等等“一脉相承地”创建下去。


小结：在定义父类时，请务必定义一个虚析构函数，以便在多态场景下，能够通过同一个类型的指针，访问
各种类型的虚构函数。


PS:如果父类没有定义虚析构函数，那么多态场景下，delete动作的结果将是未知的。

