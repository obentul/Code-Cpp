#1    ====================================================================================================

如何创建const实例

构造函数不能使用const修饰，故不存在使用const修饰构造函数来创建const实例这么一个说法。
如果需要一个const的实例，那么不能先用默认构造函数分配内存并给默认值再赋值！
这个时候构造函数的作用就体现出来了，可以通过调用带参数的构造函数来完成。

（！）从底层原理上来说，在构造函数执行完成前，实例都不会被放到const内存区中。可以理解为先在栈中调用构造函数
      把实例创建出来，然后把实例移动到const 内存区中。

#2    ====================================================================================================

初始化

基本数据类型，系统内置类(string,QString,QMap...)等都有默认初始化动作。即只是声明一个变量而不分配空间(使用new
来创建)，那么系统将会给其默认值，同时和局部变量一样，他们存在于栈中，随时可能被释放。

至此，基本数据类型 和 系统内置类(起始就是别人封装好的类) 在内存的分配上和 C语言的表现是一致的。可以把类就看做
是基本数据类型。

比如： int a;
       string b;
       QMap m;
这里的 a , b , m 都是没有初始值的，由系统给默认值，比如 a 的默认值就是 0，b的默认值是空字符串，m的不知道是啥，
这里来看类的表现无异于普通数据类型。

从内部原理上来说，类的默认初始化动作由一个“特殊的构造函数”来完成，这个构造函数叫“默认构造函数”，起始就是我们
平时定义的没有参数和内容的构造函数。

如果没有显式地定义构造函数(一个都没有)，那么编译器就会隐式地定义一个默认构造函数(没有内容也没有参数)。

至此，我们可以看出来，如果自定义的构造函数，既没有参数也没有实现，那么它和编译器创建的构造函数无异。

为了区分，由编译器创建的默认构造函数叫做“合成的默认构造函数”，由自己创建的默认构造函数叫做“默认构造函数”。他们
都是没参数没实现的。区别在于一个是编译器生成的，一个是自己生成的。

（！）默认构造函数/合成默认构造函数，虽然都没有内部实现，但是隐式的内部实现是对所有成员变量进行默认赋值。

再强调：如果我们自己定义了默认构造函数，那么编译器就不再创建默认构造函数，默认构造函数就是没有参数又没有
	实现的构造函数。当且仅当一个类没有任何构造函数时，编译器才会生成默认构造函数。



#3    ====================================================================================================

自定义类时，不可依赖“合成的默认构造函数”，一般都是自定义一个默认构造函数，即定义一个没参数又没实现的构造函数

原因如下：
1）合成的默认构造函数 仅 适合于简单的类，因为复杂的类多会要求初始成员变量值，使用默认构造函数无法满足
2）默认构造函数给的初始值可能会导致各种各样的未知问题，比如在栈内分配的内存，可能会出现内存踩踏等问题
3）有些时候，编译器无法生成 合成的默认构造函数 ，比如，类中的成员变量是另一个类，而这个嵌套的类又没有默认
构造函数，那么这时候就无法创建 合成的默认构造函数


总结：不要依赖于编译器创建(合成的)默认构造函数，一般都自己创建默认构造函数，毕竟，用不了几行代码


（！）编码中，只要定义了任何一个构造函数，那么就一定要把默认构造函数也一并给定义了，因为此时编译器不会再为
      我们生成 无参数无实现的 默认构造函数了。

（？）如果有其他的构造函数，又没有定义默认构造函数，会导致什么问题？？？


#4    ====================================================================================================

clasa A{

   A()=default;		//定义默认构造函数，这里的default是c11语法，表示要求编译器为当前类创建默认构造函数，
			//其实这里完成可以定义成 A() { },效果是一样的

}


#5    ====================================================================================================

如果在自定义的构造函数中，未对所有的成员变量都初始化，那么未被赋值的成员变量都会使用默认值(即和使用默认构造
函数时一样的值)

小结：这里其实也可以类比C语言，其实就是没被初始化的变量会被默认初始化。


#6    ====================================================================================================

构造初始化列表语法

class A{
   int a;
   char b;
   QString c;

}

A::A():a(0),b('c'),c("123"){

}

记忆：构造函数名称后面增加 : , 函数体由 {} 包裹，列表写在: 和 { 之间，用逗号隔开。


#7    ====================================================================================================

264 在类的外部定义构造函数

7.5
15.7
18.1.3
13


























