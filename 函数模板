例子代码 : Basic --> 函数模板

====================================================================================================

c++98 之前，模板声明为，template <class T>
c++98 之后，模板声明为，template <typename T>

两者等价，编程时用哪一个都可以，推荐用typename

====================================================================================================

注意：函数模板可以减少代码量，但是没法减少编译输出文件的体积。因为在编译时，遇到模板函数时，编译器会根据
      入参自动实例化成“模板函数的对应版本”。

====================================================================================================

一般情况下，模板定义在头文件中:
xxx.h
template <typename T>
void swap(T a,T b){
      ....
}
注意，不能写成
xxx.h
template <typename T>
void swap(T a,T b);
xxx.cpp
void swap(T a,T b){
	...
}
    注：1）模板定义和实现要在一个文件中，不能分开到两个文件中
	2）如果非要看起来舒服，可以再一个文件中先把所有模板都声明，然后在这个文件中再实现一遍，比如：
		
		xxx.h
		
		class xxx{
			
			template <typename T>
			func1(T a);
			template <typename T>
			func2(T a);

			...

		
			templaye <typename T>
			func1(T a){
				...
			}
			template <typename T>
			func2(T a){
				...
			}

		}
	     这好像有点2B，写了两遍。


====================================================================================================

(*)模板也可以重载，遵循重载原则


====================================================================================================

函数模板不是只能有一个参数类型，比如

template <typename T1,typename T2>  //参数特征值列表为 第一个参数和第二个参数不一样
func(T1 A,T2 B)  		    //特征值列表要和模板对的上











